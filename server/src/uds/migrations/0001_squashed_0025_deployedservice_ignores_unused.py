# Generated by Django 2.0.2 on 2018-03-02 05:45

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uds.models.util


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Authenticator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('data_type', models.CharField(max_length=128)),
                ('data', models.TextField(default='')),
                ('comments', models.TextField(default='')),
                ('priority', models.IntegerField(db_index=True, default=0)),
                ('small_name', models.CharField(db_index=True, default='', max_length=32)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Cache',
            fields=[
                ('owner', models.CharField(db_index=True, max_length=128)),
                ('key', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('value', models.TextField(default='')),
                ('created', models.DateTimeField()),
                ('validity', models.IntegerField(default=60)),
            ],
            options={
                'db_table': 'uds_utility_cache',
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(db_index=True, max_length=128)),
                ('key', models.CharField(db_index=True, max_length=64)),
                ('value', models.TextField(default='')),
                ('crypt', models.BooleanField(default=False)),
                ('long', models.BooleanField(default=False)),
                ('field_type', models.IntegerField(default=-1)),
            ],
            options={
                'db_table': 'uds_configuration',
            },
        ),
        migrations.CreateModel(
            name='DelayedTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=128)),
                ('tag', models.CharField(db_index=True, max_length=64)),
                ('instance', models.TextField()),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('execution_delay', models.PositiveIntegerField()),
                ('execution_time', models.DateTimeField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeployedService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=128)),
                ('comments', models.CharField(default='', max_length=256)),
                ('state', models.CharField(db_index=True, default='A', max_length=1)),
                ('state_date', models.DateTimeField(default=datetime.datetime(1972, 7, 1, 0, 0))),
                ('initial_srvs', models.PositiveIntegerField(default=0)),
                ('cache_l1_srvs', models.PositiveIntegerField(default=0)),
                ('cache_l2_srvs', models.PositiveIntegerField(default=0)),
                ('max_srvs', models.PositiveIntegerField(default=0)),
                ('current_pub_revision', models.PositiveIntegerField(default=1)),
            ],
            options={
                'db_table': 'uds__deployed_service',
            },
        ),
        migrations.CreateModel(
            name='DeployedServicePublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(db_index=True)),
                ('data', models.TextField(default='')),
                ('state', models.CharField(db_index=True, default='P', max_length=1)),
                ('state_date', models.DateTimeField()),
                ('revision', models.PositiveIntegerField(default=1)),
                ('deployed_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='uds.DeployedService')),
            ],
            options={
                'db_table': 'uds__deployed_service_pub',
                'ordering': ('publish_date',),
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('state', models.CharField(db_index=True, default='A', max_length=1)),
                ('comments', models.CharField(default='', max_length=256)),
                ('is_meta', models.BooleanField(db_index=True, default=False)),
                ('groups', models.ManyToManyField(to='uds.Group')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='uds.Authenticator')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_id', models.IntegerField(db_index=True, default=0)),
                ('owner_type', models.SmallIntegerField(db_index=True, default=0)),
                ('created', models.DateTimeField(db_index=True)),
                ('source', models.CharField(db_index=True, default='internal', max_length=16)),
                ('level', models.PositiveIntegerField(db_index=True, default=0)),
                ('data', models.CharField(default='', max_length=255)),
            ],
            options={
                'db_table': 'uds_log',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('net_start', models.BigIntegerField(db_index=True)),
                ('net_end', models.BigIntegerField(db_index=True)),
                ('net_string', models.CharField(default='', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='OSManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('data_type', models.CharField(max_length=128)),
                ('data', models.TextField(default='')),
                ('comments', models.CharField(max_length=256)),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('data_type', models.CharField(max_length=128)),
                ('data', models.TextField(default='')),
                ('comments', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Scheduler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('frecuency', models.PositiveIntegerField(default=86400)),
                ('last_execution', models.DateTimeField(auto_now_add=True)),
                ('next_execution', models.DateTimeField(db_index=True, default=datetime.datetime(1972, 7, 1, 0, 0))),
                ('owner_server', models.CharField(db_index=True, default='', max_length=64)),
                ('state', models.CharField(db_index=True, default='X', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('data_type', models.CharField(max_length=128)),
                ('data', models.TextField(default='')),
                ('comments', models.CharField(max_length=256)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='uds.Provider')),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='StatsCounters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_id', models.IntegerField(db_index=True, default=0)),
                ('owner_type', models.SmallIntegerField(db_index=True, default=0)),
                ('counter_type', models.SmallIntegerField(db_index=True, default=0)),
                ('stamp', models.IntegerField(db_index=True, default=0)),
                ('value', models.IntegerField(db_index=True, default=0)),
            ],
            options={
                'db_table': 'uds_stats_c',
            },
        ),
        migrations.CreateModel(
            name='StatsEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_id', models.IntegerField(db_index=True, default=0)),
                ('owner_type', models.SmallIntegerField(db_index=True, default=0)),
                ('event_type', models.SmallIntegerField(db_index=True, default=0)),
                ('stamp', models.IntegerField(db_index=True, default=0)),
            ],
            options={
                'db_table': 'uds_stats_e',
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('owner', models.CharField(db_index=True, max_length=128)),
                ('key', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('data', models.TextField(default='')),
                ('attr1', models.CharField(blank=True, db_index=True, default=None, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('data_type', models.CharField(max_length=128)),
                ('data', models.TextField(default='')),
                ('comments', models.CharField(max_length=256)),
                ('priority', models.IntegerField(db_index=True, default=0)),
                ('nets_positive', models.BooleanField(default=False)),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='UniqueId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.CharField(db_index=True, default='', max_length=128)),
                ('basename', models.CharField(db_index=True, max_length=32)),
                ('seq', models.BigIntegerField(db_index=True)),
                ('assigned', models.BooleanField(db_index=True, default=True)),
                ('stamp', models.IntegerField(db_index=True, default=0)),
            ],
            options={
                'ordering': ('-seq',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('real_name', models.CharField(max_length=128)),
                ('comments', models.CharField(max_length=256)),
                ('state', models.CharField(db_index=True, max_length=1)),
                ('password', models.CharField(default='', max_length=128)),
                ('staff_member', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('last_access', models.DateTimeField(default=datetime.datetime(1972, 7, 1, 0, 0))),
                ('parent', models.IntegerField(default=-1)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='uds.Authenticator')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(db_index=True, max_length=32)),
                ('name', models.CharField(db_index=True, max_length=32)),
                ('value', models.CharField(db_index=True, max_length=128)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to='uds.User')),
            ],
        ),
        migrations.CreateModel(
            name='UserService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(db_index=True, default='', max_length=128)),
                ('friendly_name', models.CharField(default='', max_length=128)),
                ('state', models.CharField(db_index=True, default='P', max_length=1)),
                ('os_state', models.CharField(default='P', max_length=1)),
                ('state_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('creation_date', models.DateTimeField(db_index=True)),
                ('data', models.TextField(default='')),
                ('in_use', models.BooleanField(default=False)),
                ('in_use_date', models.DateTimeField(default=datetime.datetime(1972, 7, 1, 0, 0))),
                ('cache_level', models.PositiveSmallIntegerField(db_index=True, default=0)),
                ('src_hostname', models.CharField(default='', max_length=64)),
                ('src_ip', models.CharField(default='', max_length=15)),
                ('cluster_node', models.CharField(blank=True, db_index=True, default=None, max_length=128, null=True)),
                ('deployed_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userServices', to='uds.DeployedService')),
                ('publication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userServices', to='uds.DeployedServicePublication')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userServices', to='uds.User')),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'uds__user_service',
                'ordering': ('creation_date',),
            },
        ),
        migrations.AddField(
            model_name='user',
            name='uuid',
            field=models.CharField(default=None, max_length=50, null=True, unique=True),
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('manager', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='uniqueid',
            unique_together={('basename', 'seq')},
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together={('provider', 'name')},
        ),
        migrations.AddField(
            model_name='network',
            name='transports',
            field=models.ManyToManyField(db_table='uds_net_trans', related_name='networks', to='uds.Transport'),
        ),
        migrations.AddField(
            model_name='group',
            name='users',
            field=models.ManyToManyField(related_name='groups', to='uds.User'),
        ),
        migrations.AddField(
            model_name='group',
            name='meta_if_any',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='group',
            name='uuid',
            field=models.CharField(default=None, max_length=50, null=True, unique=True),
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together={('manager', 'name')},
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='assignedGroups',
            field=models.ManyToManyField(db_table='uds__ds_grps', related_name='deployedServices', to='uds.Group'),
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='osmanager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deployedServices', to='uds.OSManager'),
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deployedServices', to='uds.Service'),
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='transports',
            field=models.ManyToManyField(db_table='uds__ds_trans', related_name='deployedServices', to='uds.Transport'),
        ),
        migrations.AlterUniqueTogether(
            name='config',
            unique_together={('section', 'key')},
        ),
        migrations.AlterModelOptions(
            name='network',
            options={'ordering': ('name',)},
        ),
        migrations.AddField(
            model_name='authenticator',
            name='uuid',
            field=models.CharField(default=None, max_length=50, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='network',
            name='uuid',
            field=models.CharField(default=None, max_length=50, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='provider',
            name='uuid',
            field=models.CharField(default=None, max_length=50, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='uuid',
            field=models.CharField(default=None, max_length=50, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='deployedservicepublication',
            name='uuid',
            field=models.CharField(default=None, max_length=50, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='authenticator',
            name='comments',
            field=models.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name='authenticator',
            name='name',
            field=models.CharField(db_index=True, max_length=128),
        ),
        migrations.AlterField(
            model_name='osmanager',
            name='name',
            field=models.CharField(db_index=True, max_length=128),
        ),
        migrations.AlterField(
            model_name='provider',
            name='name',
            field=models.CharField(db_index=True, max_length=128),
        ),
        migrations.AlterField(
            model_name='service',
            name='name',
            field=models.CharField(db_index=True, max_length=128),
        ),
        migrations.AlterField(
            model_name='transport',
            name='name',
            field=models.CharField(db_index=True, max_length=128),
        ),
        migrations.AlterField(
            model_name='user',
            name='parent',
            field=models.CharField(default=None, max_length=50, null=True),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('name', models.CharField(db_index=True, max_length=128, unique=True)),
                ('stamp', models.DateTimeField()),
                ('data', models.BinaryField()),
                ('thumb', models.BinaryField()),
                ('width', models.IntegerField(default=0)),
                ('height', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'uds_images',
            },
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deployedServices', to='uds.Image'),
        ),
        migrations.CreateModel(
            name='UserServiceProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('value', models.TextField(default='')),
                ('user_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='uds.UserService')),
            ],
            options={
                'db_table': 'uds__user_service_property',
            },
        ),
        migrations.AlterUniqueTogether(
            name='userserviceproperty',
            unique_together={('name', 'user_service')},
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='show_transports',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='meta_pools',
            field=models.ManyToManyField(to='uds.DeployedService'),
        ),
        migrations.AddField(
            model_name='provider',
            name='maintenance_mode',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='statsevents',
            name='fld1',
            field=models.CharField(default='', max_length=128),
        ),
        migrations.AddField(
            model_name='statsevents',
            name='fld2',
            field=models.CharField(default='', max_length=128),
        ),
        migrations.AddField(
            model_name='statsevents',
            name='fld3',
            field=models.CharField(default='', max_length=128),
        ),
        migrations.AddField(
            model_name='statsevents',
            name='fld4',
            field=models.CharField(default='', max_length=128),
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('created', models.DateTimeField(db_index=True)),
                ('ends', models.DateTimeField(blank=True, db_index=True, default=None, null=True)),
                ('object_type', models.SmallIntegerField(db_index=True, default=-1)),
                ('object_id', models.IntegerField(blank=True, db_index=True, default=None, null=True)),
                ('permission', models.SmallIntegerField(db_index=True, default=0)),
                ('group', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='uds.Group')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='uds.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('stamp', models.DateTimeField()),
                ('validity', models.IntegerField(default=60)),
                ('data', models.BinaryField()),
                ('validator', models.BinaryField(blank=True, default=None, null=True)),
            ],
            options={
                'db_table': 'uds_tickets',
            },
        ),
        migrations.CreateModel(
            name='DeployedServicePublicationChangelog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stamp', models.DateTimeField()),
                ('revision', models.PositiveIntegerField(default=1)),
                ('log', models.TextField(default='')),
            ],
            options={
                'abstract': False,
                'db_table': 'uds__deployed_service_pub_cl',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='created',
            field=models.DateTimeField(blank=True, default=uds.models.util.getSqlDatetime),
        ),
        migrations.AddField(
            model_name='user',
            name='created',
            field=models.DateTimeField(blank=True, default=uds.models.util.getSqlDatetime),
        ),
        migrations.AlterField(
            model_name='deployedservice',
            name='image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deployedServices', to='uds.Image'),
        ),
        migrations.AlterField(
            model_name='group',
            name='manager',
            field=uds.models.util.UnsavedForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='uds.Authenticator'),
        ),
        migrations.AlterField(
            model_name='user',
            name='manager',
            field=uds.models.util.UnsavedForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='uds.Authenticator'),
        ),
        migrations.AddField(
            model_name='deployedservicepublicationchangelog',
            name='publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changelog', to='uds.DeployedService'),
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('name', models.CharField(default='', max_length=128)),
                ('comments', models.CharField(default='', max_length=256)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'uds_calendar',
            },
        ),
        migrations.CreateModel(
            name='CalendarRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('comments', models.CharField(max_length=256)),
                ('start', models.DateTimeField()),
                ('end', models.DateField(blank=True, null=True)),
                ('frequency', models.CharField(choices=[('YEARLY', 'Yearly'), ('MONTHLY', 'Monthly'), ('WEEKLY', 'Weekly'), ('DAILY', 'Daily'), ('WEEKDAYS', 'Weekdays')], max_length=32)),
                ('interval', models.IntegerField(default=1)),
                ('duration', models.IntegerField(default=0)),
                ('duration_unit', models.CharField(choices=[('MINUTES', 'Minutes'), ('HOURS', 'Hours'), ('DAYS', 'Days'), ('WEEKS', 'Weeks')], default='MINUTES', max_length=32)),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='uds.Calendar')),
            ],
            options={
                'db_table': 'uds_calendar_rules',
            },
        ),
        migrations.AlterField(
            model_name='scheduler',
            name='last_execution',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterIndexTogether(
            name='userservice',
            index_together={('deployed_service', 'cache_level', 'state')},
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('tag', models.CharField(db_index=True, max_length=32, unique=True)),
            ],
            options={
                'db_table': 'uds_tag',
            },
        ),
        migrations.AddField(
            model_name='authenticator',
            name='tags',
            field=models.ManyToManyField(to='uds.Tag'),
        ),
        migrations.AddField(
            model_name='calendar',
            name='tags',
            field=models.ManyToManyField(to='uds.Tag'),
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='tags',
            field=models.ManyToManyField(to='uds.Tag'),
        ),
        migrations.AddField(
            model_name='network',
            name='tags',
            field=models.ManyToManyField(to='uds.Tag'),
        ),
        migrations.AddField(
            model_name='osmanager',
            name='tags',
            field=models.ManyToManyField(to='uds.Tag'),
        ),
        migrations.AddField(
            model_name='provider',
            name='tags',
            field=models.ManyToManyField(to='uds.Tag'),
        ),
        migrations.AddField(
            model_name='service',
            name='tags',
            field=models.ManyToManyField(to='uds.Tag'),
        ),
        migrations.AddField(
            model_name='transport',
            name='tags',
            field=models.ManyToManyField(to='uds.Tag'),
        ),
        migrations.CreateModel(
            name='ServicesPoolGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('name', models.CharField(db_index=True, default='', max_length=128, unique=True)),
                ('comments', models.CharField(default='', max_length=256)),
                ('priority', models.IntegerField(db_index=True, default=0)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servicesPoolsGroup', to='uds.Image')),
            ],
            options={
                'abstract': False,
                'db_table': 'uds__pools_groups',
            },
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='servicesPoolGroup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servicesPools', to='uds.ServicesPoolGroup'),
        ),
        migrations.CreateModel(
            name='CalendarAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('access', models.CharField(default='DENY', max_length=8)),
                ('priority', models.IntegerField(db_index=True, default=0)),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uds.Calendar')),
            ],
            options={
                'db_table': 'uds_cal_access',
                'ordering': ('priority',),
            },
        ),
        migrations.CreateModel(
            name='CalendarAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('action', models.CharField(default='', max_length=64)),
                ('at_start', models.BooleanField(default=False)),
                ('events_offset', models.IntegerField(default=0)),
                ('params', models.CharField(default='', max_length=1024)),
                ('last_execution', models.DateTimeField(blank=True, db_index=True, default=None, null=True)),
                ('next_execution', models.DateTimeField(blank=True, db_index=True, default=None, null=True)),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uds.Calendar')),
            ],
            options={
                'db_table': 'uds_cal_action',
            },
        ),
        migrations.CreateModel(
            name='DBFile',
            fields=[
                ('uuid', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True)),
                ('size', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('owner', models.CharField(default='', max_length=32)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='fallbackAccess',
            field=models.CharField(default='ALLOW', max_length=8),
        ),
        migrations.AddField(
            model_name='calendaraction',
            name='service_pool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uds.DeployedService'),
        ),
        migrations.AddField(
            model_name='calendaraccess',
            name='service_pool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uds.DeployedService'),
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='accessCalendars',
            field=models.ManyToManyField(related_name='accessSP', through='uds.CalendarAccess', to='uds.Calendar'),
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='actionsCalendars',
            field=models.ManyToManyField(related_name='actionsSP', through='uds.CalendarAction', to='uds.Calendar'),
        ),
        migrations.AddField(
            model_name='transport',
            name='allowed_oss',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='allow_users_remove',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='short_name',
            field=models.CharField(default='', max_length=32),
        ),
        migrations.AddField(
            model_name='deployedservice',
            name='ignores_unused',
            field=models.BooleanField(default=False),
        ),
    ]
